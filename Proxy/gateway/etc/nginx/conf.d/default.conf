server {
  listen 80;
  listen [::]:80;

  server_name _;

  include mime.types; # leading slash - absolute reference, without slash - relative reference
  #include proxy.conf;
  #include fastcgi.conf;

  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;
  gzip_proxied any; # heroku router sends Via header

  default_type application/octet-stream;

  server_name_in_redirect off;
  server_tokens off;

  sendfile on;
  sendfile_max_chunk 2m;
  tcp_nodelay on;
  tcp_nopush off;

  client_body_buffer_size 512k;
  client_body_timeout 5; # must read the body in 5 seconds
  client_header_buffer_size 16k;
  client_header_timeout 60s;
  client_max_body_size 1m;
  keepalive_timeout 5;
  large_client_header_buffers 16 128k;

  error_log '/dev/stdout' notice; # levels: debug, info, notice, warn, error (default), crit, alert, emerg
  access_log '/dev/stdout' main; # formats: combined (default), l2met, main
  #access_log syslog:server=unix:'/tmp/nginx.socket',facility=local7,tag=nginx,severity=info main buffer=64k gzip=1 flush=5m;

  resolver 127.0.0.1;
  resolver_timeout 30s;

  #root /var/www;
  #index index.html index.htm index.php;

  proxy_buffering off;
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_cache_bypass $http_upgrade;
  proxy_buffers 32 512k;
  proxy_buffer_size 512k;
  proxy_connect_timeout 90;
  proxy_read_timeout 90;
  proxy_send_timeout 90;

  #location ^~ /assets {
  #  root /var/www;
  #  try_files $uri $uri/ $uri.html $uri/index.html =404;
  #}

  location ^~ /basket {
    proxy_pass 'http://host.docker.internal:5003';
  }

  location ^~ /catalog {
    proxy_pass 'http://host.docker.internal:5000';
  }

  location ^~ /identity {
    proxy_pass 'http://host.docker.internal:5002';
  }

  #location ^~ /pgadmin {
  #  proxy_pass 'http://host.docker.internal:8001';
  #}

  #location / {
  #  proxy_pass 'http://host.docker.internal:5001';
  #}

  location / {

    # force SSL / redirect http -> https
    #if ($http_x_forwarded_proto != "https") {
    #  return 301 https://$host$request_uri;
    #}

    proxy_pass http://host.docker.internal:5001 weight=1 fail_timeout=0;
    #proxy_pass http://unix:/tmp/nginx.socket weight=1 fail_timeout=0;

    #root /var/www;
    #try_files $uri $uri/ $uri.html $uri/index.html =404;
    #index index.html index.htm index.php;
    #alias /public;

    proxy_buffering off;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_buffers 32 512k;
    proxy_buffer_size 512k;
    proxy_connect_timeout 90;
    proxy_read_timeout 90;
    proxy_send_timeout 90;

    #proxy_set_header Access-Control-Allow-Headers '*';
    #proxy_set_header Access-Control-Allow-Methods 'CONNECT, DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT';
    #proxy_set_header Access-Control-Allow-Origin '*';
    proxy_set_header Connection keep-alive;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Upgrade-Insecure-Requests 1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
  }

  #location /swagger/basket {
  #  return 301 http://host.docker.internal:5003/swagger;
  #}

  #location /swagger/catalog {
  #  return 301 http://host.docker.internal:5000/swagger;
  #}

  #location /admin/identity {
  #  return 301 http://host.docker.internal:5002;
  #}

  #location /admin/pg {
  #  return 301 http://host.docker.internal:8001/login;
  #}

  #location /assets {
  #  alias /var/www/assets;
  #}
}
