# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All files
#[*]
#charset = utf-8
#end_of_line = lf
#indent_style = space
#indent_size = 2
#insert_final_newline = true
#max_line_length = 120
#tab_width = 2
#trim_trailing_whitespace = true

# Analysers files
[*.{har,jsb2,jsb3,babelrc,babelrc.*,bowerrc,bowerrc.*,eslintrc,eslintrc.*,prettierrc,prettierrc.*,stylelintrc,stylelintrc.*}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# ASP.NET Web Page files
[*.{asp,apsx,cshtml,razor,vbhtml}]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 4
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Configuration Visual Studio files
[*.{config,feature,manifest,nuspec,props,resx,ruleset,targets,vsixmanifest,vsct}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# dotNET C#, VB files
[*.{cake,cs,csx,vb,vbx}]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Environment files
[*.env,.env.*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Embedded Ruby files
[*.erb]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# JavaScript & TypeScript files
[*.{ajs,ajsx,ats,atsx,cjs,cjsx,coffee,cts,ctsx,d,js,jsm,jsx,litcoffee,mjs,mjsx,mts,mtsx,ng,ts,tsm,tsx,types,vue}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# JSON, JSON5 & WebManifest files
[*.{json,json.*,json5,json5.*,webmanifest,webmanifest.*}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# LaTeX files
[*.{aux,bst,cls,dtx,dvi,etx,fd,glo,ind,ins,ist,lat,latex,lof,lot,lp,ltx,mf,odvi,paux,pk,pkt,pool,pxl,sty,tex,texi,texinfo,tfm,toc,txss,vf,vpl,xfi}]
charset = utf-8
end_of_line = lf
indent_size = 2
indent_style = space
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Linux Script & Configuration files
[*.{[Bb][Aa][Ss][Hh],[Cc][Oo][Nn][Ff],[Ss][Hh],[Zz][Ss][Hh]}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Lua files
[*.lua]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Markdown files
[*.{markdn,markdown,md,mdown,mdtext,mdtxt,mdwn,mdx,mkd,mkdn,text}]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = tab
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = false

# Perl files
[*.{cgi,perl,pl,plx,pm,pod,t,xs}]
charset = utf-8
end_of_line = lf
indent_style = tab
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Python files
[*.{py,pyc,pyd,pyi,pyo,pyw,pyz}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# reStructuredText files
[*.rst]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = tab
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = false

# Ruby files
[*.rb]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Rust files
[*.{rs,rlib}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Style files
[*.{css,cssx,less,pcss,sass,scss,sss,styl}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# SVG files
[*.svg]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Text files
[*.txt]
charset = utf-8
end_of_line = lf
indent_style = tab
indent_size = 4
insert_final_newline = true
max_line_length = 120
tab_width = 4
trim_trailing_whitespace = true

# VBScript files
[*.{vbe,vbs,wsc,wsf}]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Visual Studio Project files
[*.{asaproj,asaproj.*,ccproj,ccproj.*,csproj,csproj.*,dbproj,dbproj.*,dcproj,dcproj.*,deployproj,deployproj.*,edgeproj,edgeproj.*,esproj,esproj.*,fsproj,fsproj.*,hiveproj,hiveproj.*,lsproj,lsproj.*,modelproj,modelproj.*,msbuildproj,msbuildproj.*,njsproj,njsproj.*,pigproj,pigproj.*,proj,proj.*,projitems,projitems.*,sfproj,sfproj.*,shproj,shproj.*,sqlproj,sqlproj.*,vbproj,vbproj.*,vcproj,vcproj.*,vcxitems,vcxitems.*,vcxproj,vcxproj.*,vcxproj.filters,usqldbproj,usqldbproj.*,usqlproj,usqlproj.*,usqlutproj,usqlutproj.*,wapproj,wapproj.*,wixproj,wixproj.*,wwaproj,wwaproj.*,xproj,xproj.*}]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 4
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Visual Studio Solution files
[*.{sln,sln.*,slnf,slnf.*}]
charset = utf-8
end_of_line = crlf
indent_style = tab
indent_size = 4
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Web files
[*.{agp,ahtm,ahtml,as,chtm,chtml,fhtm,fhtml,fpxml,haml,hhtm,hhtml,hta,htc,htd,htm,html,html5,htmls,htm,htms,ihtm,ihtml,jhtm,jhtml,jsp,jspa,jspf,jspx,mht,mhtml,phar,php,php4,php5,phps,pht,phtm,phtml,rhtm,rhtml,sht,shtm,shtml,stm,stml,uhtm,uhtml,xht,xhtm,xhtml,xtml}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Windows Script files
[*.{[Bb][Aa][Tt],[Cc][Oo][Mm],[Cc][Mm][Dd],[Pp][Ss]1}]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# WSL Config files
[*.[Ww][Ss][Ll][Cc][Oo][Nn][Ff][Ii][Gg]]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# XAML files
[*.{ant,fxml,jhm,jnlp,jrxml,jsp,jspx,rng,tld,wsdl,xaml,xml,xsd,xsl,xslt,xul}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# YAML files
[*.{yaml,yml}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
tab_width = 2
trim_trailing_whitespace = true

# Dockerfiles
[*.[Dd]ocker[Ff]ile,[Dd]ocker[Ff]ile,[Dd]ocker[Ff]ile.*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 4
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Makefiles
[*.[Mm]ake[Ff]ile,[Mm]ake[Ff]ile,[Mm]ake[Ff]ile.*]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = tab
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# .dockerignore, .editorconfig, .gitattributes, .gitignore, .gitmodule, .gitmodules files
[*.{[Dd]ocker[Ii]gnore,[Ee]ditor[Cc]onfig,[Gg]it[Aa]ttributes,[Gg]it[Ii]gnore,[Gg]it[Mm]odule,[Gg]it[Mm]odules}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 4
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

#####
##### dotNET C# files #####
#####
[*.{cake,cs,cshtml,csx,razor}]

### C# Coding Conventions ###

# var preferences
#csharp_style_var_elsewhere = false
csharp_style_var_elsewhere = true
#csharp_style_var_for_built_in_types = false
csharp_style_var_for_built_in_types = true
#csharp_style_var_when_type_is_apparent = false
csharp_style_var_when_type_is_apparent = true

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
#csharp_style_prefer_switch_expression = true
csharp_style_prefer_switch_expression = false

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
#csharp_prefer_static_local_function = true
csharp_prefer_static_local_function = false
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async

# Code-block preferences
csharp_prefer_braces = true
#csharp_prefer_simple_using_statement = true
csharp_prefer_simple_using_statement = false
#csharp_style_namespace_declarations = block_scoped
csharp_style_namespace_declarations = file_scoped
csharp_style_prefer_method_group_conversion = true
csharp_style_prefer_top_level_statements = true

# Expression-level preferences
#csharp_prefer_simple_default_expression = true
csharp_prefer_simple_default_expression = false
csharp_style_deconstructed_variable_declaration = true
#csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_implicit_object_creation_when_type_is_apparent = false
csharp_style_inlined_variable_declaration = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_prefer_tuple_swap = true
csharp_style_prefer_utf8_string_literals = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable : none
csharp_style_unused_value_expression_statement_preference = discard_variable : none

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
#csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false
#csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
#csharp_style_allow_embedded_statements_on_same_line_experimental = true
csharp_style_allow_embedded_statements_on_same_line_experimental = false

### C# Formatting Rules ###

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true
csharp_new_line_within_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
#csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
#csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
#csharp_preserve_single_line_statements = true
csharp_preserve_single_line_statements = false

### C# .NET Naming Styles ###

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

#####
##### dotNET VB files #####
#####
[*.{razor,vb,vbhtml,vbx}]

### VB Coding Conventions ###

# Modifier preferences
visual_basic_preferred_modifier_order = partial, default, private, protected, public, friend, notoverridable, overridable, mustoverride, overloads, overrides, mustinherit, notinheritable, static, shared, shadows, readonly, writeonly, dim, const, withevents, widening, narrowing, custom, async, iterator

# Expression-level preferences
visual_basic_style_prefer_isnot_expression = true
visual_basic_style_prefer_simplified_object_creation = true
visual_basic_style_unused_value_assignment_preference = unused_local_variable
visual_basic_style_unused_value_expression_statement_preference = unused_local_variable

### VB .NET Naming Styles ###

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

#####
##### dotNET C#, VB generated files ###
#####
[*.{[Dd]esigner,[Gg]enerated}.{cake,cs,cshtml,csx,razor,vb,vbhtml,vbx}]
generated_code = true

#####
##### dotNET C#, VB files #####
#####
[*.{cake,cs,cshtml,csx,razor,vb,vbhtml,vbx}]

### .NET Coding Conventions ###

# File header preferences
file_header_template = unset

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
#dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
#dotnet_style_namespace_match_folder = true
dotnet_style_namespace_match_folder = false
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
#dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = false
#dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_conditional_expression_over_return = false
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
#dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_multiple_blank_lines_experimental = false
#dotnet_style_allow_statement_immediately_after_block_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = false

#####
##### dotNET C#, VB files #####
#####
[*.{cake,cs,cshtml,csx,vb,vbhtml,vbx}]

### Default severity configuration ###

# Default severity for all IDE code rules with category 'CodeQuality'
#dotnet_analyzer_diagnostic.category-CodeQuality.severity = warning

# Default severity for all IDE code rules with category 'Design'
#dotnet_analyzer_diagnostic.category-Design.severity = warning

# Default severity for all IDE code rules with category 'Documentation'
#dotnet_analyzer_diagnostic.category-Documentation.severity = warning

# Default severity for all IDE code rules with category 'Globalization'
#dotnet_analyzer_diagnostic.category-Globalization.severity = warning

# Default severity for all IDE code rules with category 'Interoperability'
#dotnet_analyzer_diagnostic.category-Interoperability.severity = warning

# Default severity for all IDE code rules with category 'Maintainability'
#dotnet_analyzer_diagnostic.category-Maintainability.severity = warning

# Default severity for all IDE code rules with category 'Naming'
#dotnet_analyzer_diagnostic.category-Naming.severity = warning

# Default severity for all IDE code rules with category 'Performance'
#dotnet_analyzer_diagnostic.category-Performance.severity = warning

# Default severity for all IDE code rules with category 'Reliability'
#dotnet_analyzer_diagnostic.category-Reliability.severity = warning

# Default severity for all IDE code rules with category 'Security'
#dotnet_analyzer_diagnostic.category-Security.severity = warning

# Default severity for all IDE code rules with category 'SingleFile'
#dotnet_analyzer_diagnostic.category-SingleFile.severity = warning

# Default severity for all IDE code rules with category 'Style'
#dotnet_analyzer_diagnostic.category-Style.severity = warning

# Default severity for all IDE code rules with category 'Usage'
#dotnet_analyzer_diagnostic.category-Usage.severity = warning

#####
##### dotNET C#, VB files #####
#####
[*.{cake,cs,cshtml,csx,vb,vbhtml,vbx}]

### Default severity configuration ###

###
### roslyn.diagnostics.analyzers.3.3.4-beta1.22362.3
### + microsoft.codeanalysis.publicapianalyzers.3.3.4-beta1.22362.3
### + microsoft.codeanalysis.bannedapianalyzers.3.3.4-beta1.22362.3
###

# NOTE: Requires **VS2019 16.3** or later
# All Rules with default severity. Rules with IsEnabledByDefault = false are disabled.

# RS0001: Use 'SpecializedCollections.EmptyEnumerable()'
dotnet_diagnostic.RS0001.severity = warning

# RS0002: Use 'SpecializedCollections.SingletonEnumerable()'
dotnet_diagnostic.RS0002.severity = warning

# RS0004: Invoke the correct property to ensure correct use site diagnostics
dotnet_diagnostic.RS0004.severity = none

# RS0006: Do not mix attributes from different versions of MEF
dotnet_diagnostic.RS0006.severity = warning

# RS0016: Add public types and members to the declared API
dotnet_diagnostic.RS0016.severity = warning

# RS0017: Remove deleted types and members from the declared API
dotnet_diagnostic.RS0017.severity = warning

# RS0019: 'SymbolDeclaredEvent' must be generated for source symbols
dotnet_diagnostic.RS0019.severity = none

# RS0022: Constructor make noninheritable base class inheritable
dotnet_diagnostic.RS0022.severity = warning

# RS0023: Parts exported with MEFv2 must be marked with 'SharedAttribute'
dotnet_diagnostic.RS0023.severity = warning

# RS0024: The contents of the public API files are invalid
dotnet_diagnostic.RS0024.severity = warning

# RS0025: Do not duplicate symbols in public API files
dotnet_diagnostic.RS0025.severity = warning

# RS0026: Do not add multiple public overloads with optional parameters
dotnet_diagnostic.RS0026.severity = warning

# RS0027: Public API with optional parameter(s) should have the most parameters amongst its public overloads
dotnet_diagnostic.RS0027.severity = warning

# RS0030: Do not used banned APIs
dotnet_diagnostic.RS0030.severity = warning

# RS0031: The list of banned symbols contains a duplicate
dotnet_diagnostic.RS0031.severity = warning

# RS0032: Test exports should not be discoverable
dotnet_diagnostic.RS0032.severity = none

# RS0033: Importing constructor should be marked with 'ObsoleteAttribute'
dotnet_diagnostic.RS0033.severity = warning

# RS0034: Exported parts should be marked with 'ImportingConstructorAttribute'
dotnet_diagnostic.RS0034.severity = warning

# RS0035: External access to internal symbols outside the restricted namespace(s) is prohibited
dotnet_diagnostic.RS0035.severity = error

# RS0036: Annotate nullability of public types and members in the declared API
dotnet_diagnostic.RS0036.severity = warning

# RS0037: Enable tracking of nullability of reference types in the declared API
dotnet_diagnostic.RS0037.severity = warning

# RS0038: Prefer null literal
dotnet_diagnostic.RS0038.severity = warning

# RS0040: Defaultable types should have defaultable fields
dotnet_diagnostic.RS0040.severity = warning

# RS0041: Public members should not use oblivious types
dotnet_diagnostic.RS0041.severity = warning

# RS0042: Do not copy value
dotnet_diagnostic.RS0042.severity = warning

# RS0043: Do not call 'GetTestAccessor()'
dotnet_diagnostic.RS0043.severity = warning

# RS0046: Avoid the 'Opt' suffix
dotnet_diagnostic.RS0046.severity = warning

# RS0048: Missing shipped or unshipped public API file
dotnet_diagnostic.RS0048.severity = warning

# RS0049: Instance of TemporaryArray<T>.AsRef() must be a 'using' variable
dotnet_diagnostic.RS0049.severity = warning

# RS0050: Public API is marked as removed but it exists in source code
dotnet_diagnostic.RS0050.severity = warning

###
### microsoft.codeanalysis.analyzers.3.3.4-beta1.22362.3
###

# NOTE: Requires **VS2019 16.3** or later
# All Rules with default severity. Rules with IsEnabledByDefault = false are disabled.

# RS1001: Missing diagnostic analyzer attribute
dotnet_diagnostic.RS1001.severity = warning

# RS1002: Missing kind argument when registering an analyzer action
dotnet_diagnostic.RS1002.severity = warning

# RS1003: Unsupported SymbolKind argument when registering a symbol analyzer action
dotnet_diagnostic.RS1003.severity = warning

# RS1004: Recommend adding language support to diagnostic analyzer
dotnet_diagnostic.RS1004.severity = warning

# RS1005: ReportDiagnostic invoked with an unsupported DiagnosticDescriptor
dotnet_diagnostic.RS1005.severity = warning

# RS1006: Invalid type argument for DiagnosticAnalyzer's Register method
dotnet_diagnostic.RS1006.severity = warning

# RS1007: Provide localizable arguments to diagnostic descriptor constructor
dotnet_diagnostic.RS1007.severity = none

# RS1008: Avoid storing per-compilation data into the fields of a diagnostic analyzer
dotnet_diagnostic.RS1008.severity = warning

# RS1009: Only internal implementations of this interface are allowed
#dotnet_diagnostic.RS1009.severity = error
dotnet_diagnostic.RS1009.severity = warning

# RS1010: Create code actions should have a unique EquivalenceKey for FixAll occurrences support
dotnet_diagnostic.RS1010.severity = warning

# RS1011: Use code actions that have a unique EquivalenceKey for FixAll occurrences support
dotnet_diagnostic.RS1011.severity = warning

# RS1012: Start action has no registered actions
dotnet_diagnostic.RS1012.severity = warning

# RS1013: Start action has no registered non-end actions
dotnet_diagnostic.RS1013.severity = warning

# RS1014: Do not ignore values returned by methods on immutable objects.
dotnet_diagnostic.RS1014.severity = warning

# RS1015: Provide non-null 'helpLinkUri' value to diagnostic descriptor constructor
dotnet_diagnostic.RS1015.severity = none

# RS1016: Code fix providers should provide FixAll support
dotnet_diagnostic.RS1016.severity = warning

# RS1017: DiagnosticId for analyzers must be a non-null constant
dotnet_diagnostic.RS1017.severity = warning

# RS1018: DiagnosticId for analyzers must be in specified format
dotnet_diagnostic.RS1018.severity = warning

# RS1019: DiagnosticId must be unique across analyzers
dotnet_diagnostic.RS1019.severity = warning

# RS1020: Category for analyzers must be from the specified values
dotnet_diagnostic.RS1020.severity = none

# RS1021: Invalid entry in analyzer category and diagnostic ID range specification file
dotnet_diagnostic.RS1021.severity = warning

# RS1022: Do not use types from Workspaces assembly in an analyzer
dotnet_diagnostic.RS1022.severity = warning

# RS1023: Upgrade MSBuildWorkspace
dotnet_diagnostic.RS1023.severity = warning

# RS1024: Symbols should be compared for equality
dotnet_diagnostic.RS1024.severity = warning

# RS1025: Configure generated code analysis
dotnet_diagnostic.RS1025.severity = warning

# RS1026: Enable concurrent execution
dotnet_diagnostic.RS1026.severity = warning

# RS1027: Types marked with DiagnosticAnalyzerAttribute(s) should inherit from DiagnosticAnalyzer
dotnet_diagnostic.RS1027.severity = warning

# RS1028: Provide non-null 'customTags' value to diagnostic descriptor constructor
dotnet_diagnostic.RS1028.severity = none

# RS1029: Do not use reserved diagnostic IDs
dotnet_diagnostic.RS1029.severity = warning

# RS1030: Do not invoke Compilation.GetSemanticModel() method within a diagnostic analyzer
dotnet_diagnostic.RS1030.severity = warning

# RS1031: Define diagnostic title correctly
dotnet_diagnostic.RS1031.severity = warning

# RS1032: Define diagnostic message correctly
dotnet_diagnostic.RS1032.severity = warning

# RS1033: Define diagnostic description correctly
dotnet_diagnostic.RS1033.severity = warning

# RS1034: Prefer 'IsKind' for checking syntax kinds
dotnet_diagnostic.RS1034.severity = warning

# RS2000: Add analyzer diagnostic IDs to analyzer release
dotnet_diagnostic.RS2000.severity = warning

# RS2001: Ensure up-to-date entry for analyzer diagnostic IDs are added to analyzer release
dotnet_diagnostic.RS2001.severity = warning

# RS2002: Do not add removed analyzer diagnostic IDs to unshipped analyzer release
dotnet_diagnostic.RS2002.severity = warning

# RS2003: Shipped diagnostic IDs that are no longer reported should have an entry in the 'Removed Rules' table in unshipped file
dotnet_diagnostic.RS2003.severity = warning

# RS2004: Diagnostic IDs marked as removed in analyzer release file should not be reported by analyzers
dotnet_diagnostic.RS2004.severity = warning

# RS2005: Remove duplicate entries for diagnostic ID in the same analyzer release
dotnet_diagnostic.RS2005.severity = warning

# RS2006: Remove duplicate entries for diagnostic ID between analyzer releases
dotnet_diagnostic.RS2006.severity = warning

# RS2007: Invalid entry in analyzer release file
dotnet_diagnostic.RS2007.severity = warning

# RS2008: Enable analyzer release tracking
dotnet_diagnostic.RS2008.severity = warning

###
### microsoft.codeanalysis.csharp.codestyle.4.4.0-1.final
### + microsoft.codeanalysis.visualbasic.codestyle.4.4.0-1.final
###

# NOTE: Requires **VS2019 16.7** or later
# Style rules with 'All' analysis mode + Extra rules from 'None' analysis mode converted to warnings

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = warning

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0005_gen: Using directive is unnecessary.
dotnet_diagnostic.IDE0005_gen.severity = silent

# IDE0007: Use implicit type
dotnet_diagnostic.IDE0007.severity = warning

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = warning

# IDE0009: Member access should be qualified.
dotnet_diagnostic.IDE0009.severity = warning

# IDE0010: Add missing cases
dotnet_diagnostic.IDE0010.severity = warning

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = warning

# IDE0016: Use 'throw' expression
dotnet_diagnostic.IDE0016.severity = warning

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = warning

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = warning

# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = warning

# IDE0020: Use pattern matching
dotnet_diagnostic.IDE0020.severity = warning

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = warning

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = warning

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = warning

# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = warning

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = warning

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = warning

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = warning

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = warning

# IDE0029: Use coalesce expression
dotnet_diagnostic.IDE0029.severity = warning

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = warning

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = warning

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = warning

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = warning

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = warning

# IDE0035: Unreachable code detected
dotnet_diagnostic.IDE0035.severity = warning

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = warning

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = warning

# IDE0039: Use local function
dotnet_diagnostic.IDE0039.severity = warning

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = warning

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = warning

# IDE0043: Invalid format string
dotnet_diagnostic.IDE0043.severity = warning

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = warning

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = warning

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = warning

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = warning

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = warning

# IDE0053: Use expression body for lambda expressions
dotnet_diagnostic.IDE0053.severity = warning

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = warning

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = warning

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = warning

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = suggestion

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = warning

# IDE0062: Make local function 'static'
dotnet_diagnostic.IDE0062.severity = warning

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = warning

# IDE0064: Make readonly fields writable
dotnet_diagnostic.IDE0064.severity = warning

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = warning

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = warning

# IDE0070: Use 'System.HashCode'
dotnet_diagnostic.IDE0070.severity = warning

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning

# IDE0072: Add missing cases
dotnet_diagnostic.IDE0072.severity = warning

# IDE0073: The file header is missing or not located at the top of the file
dotnet_diagnostic.IDE0073.severity = warning

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = warning

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = warning

# IDE0076: Invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = warning

# IDE0077: Avoid legacy format target in 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity = warning

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = warning

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# IDE0081: 'ByVal' keyword is unnecessary and can be removed. // VB
dotnet_diagnostic.IDE0081.severity = warning

# IDE0082: 'typeof' can be converted  to 'nameof'
dotnet_diagnostic.IDE0082.severity = warning

# IDE0083: Use pattern matching
dotnet_diagnostic.IDE0083.severity = warning

# IDE0084: Use 'IsNot' expression // VB
dotnet_diagnostic.IDE0084.severity = warning

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = warning

# IDE0100: Remove redundant equality
dotnet_diagnostic.IDE0100.severity = warning

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# IDE0120: Simplify LINQ expression
dotnet_diagnostic.IDE0120.severity = warning

# IDE0130: Namespace does not match folder structure
dotnet_diagnostic.IDE0130.severity = none

# IDE0140: Object creation can be simplified // VB
dotnet_diagnostic.IDE0140.severity = warning

# IDE0150: Prefer 'null' check over type check
dotnet_diagnostic.IDE0150.severity = warning

# IDE0160: Convert to block scoped namespace
dotnet_diagnostic.IDE0160.severity = none

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning

# IDE0170: Property pattern can be simplified
dotnet_diagnostic.IDE0170.severity = warning

# IDE0180: Use tuple to swap values
dotnet_diagnostic.IDE0180.severity = warning

# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = warning

# IDE0210: Convert to top-level statements
dotnet_diagnostic.IDE0210.severity = warning

# IDE0211: Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0211.severity = warning

# IDE0220: Add explicit cast
dotnet_diagnostic.IDE0220.severity = warning

# IDE0230: Use UTF-8 string literal
dotnet_diagnostic.IDE0230.severity = warning

# IDE0240: Remove redundant nullable directive
dotnet_diagnostic.IDE0240.severity = warning

# IDE0241: Remove unnecessary nullable directive
dotnet_diagnostic.IDE0241.severity = warning

# IDE1005: Delegate invocation can be simplified.
dotnet_diagnostic.IDE1005.severity = warning

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = warning

# IDE2000: Avoid multiple blank lines
dotnet_diagnostic.IDE2000.severity = warning

# IDE2001: Embedded statements must be on their own line
dotnet_diagnostic.IDE2001.severity = warning

# IDE2002: Consecutive braces must not have blank line between them
dotnet_diagnostic.IDE2002.severity = warning

# IDE2003: Blank line required between block and subsequent statement
dotnet_diagnostic.IDE2003.severity = warning

# IDE2004: Blank line not allowed after constructor initializer colon
dotnet_diagnostic.IDE2004.severity = warning

# RemoveUnnecessaryImportsFixable:
dotnet_diagnostic.RemoveUnnecessaryImportsFixable.severity = warning

###
### microsoft.codeanalysis.netanalyzers.7.0.0-preview1.22362.3
### + microsoft.codeanalysis.fxcopanalyzers.3.3.2
### + text.analyzers.3.3.4-beta1.22362.3
###

# NOTE: Requires **VS2019 16.3** or later
# All Rules with default severity. Rules with IsEnabledByDefault = false are disabled.

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = silent

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = silent

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = none

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = none

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = none

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = none

# CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = silent

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = none

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = suggestion

# CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = suggestion

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = none

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = none

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = none

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = none

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = none

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = silent

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = suggestion

# CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = none

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = none

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = none

# CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = none

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = suggestion

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = suggestion

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = silent

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = none

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = none

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = none

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = none

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = suggestion

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = none

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = none

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = none

# CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = none

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = suggestion

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = suggestion

# CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = suggestion

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = suggestion

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = silent

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = silent

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = silent

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = silent

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = silent

# CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = silent

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = suggestion

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning

# CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning

# CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = warning

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = suggestion

# CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = warning

# CA1421: This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1421.severity = suggestion

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = none

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = none

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = none

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = none

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = suggestion

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = none

# CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = none

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = none

# CA1704: Identifiers should be spelled correctly
dotnet_diagnostic.CA1704.severity = warning

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = silent

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = silent

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = silent

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = silent

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = none

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = silent

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = silent

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = silent

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = silent

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = silent

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = silent

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = silent

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = warning

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = none

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = silent

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = suggestion

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = none

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = none

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = none

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = suggestion

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = none

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = suggestion

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = none

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = suggestion

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = suggestion

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = suggestion

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = suggestion

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = suggestion

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = suggestion

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = suggestion

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = suggestion

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = suggestion

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = suggestion

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = silent

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = suggestion

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = suggestion

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = suggestion

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = suggestion

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = suggestion

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = suggestion

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = suggestion

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = suggestion

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = suggestion

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = silent

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = none

# CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = suggestion

# CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = none

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = silent

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = suggestion

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = suggestion

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = suggestion

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = suggestion

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = suggestion

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

# CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = suggestion

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = none

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = suggestion

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = none

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = none

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = none

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = silent

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = none

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = suggestion

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = suggestion

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = none

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = none

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = silent

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = none

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = none

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = suggestion

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = suggestion

# CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = suggestion

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = silent

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = suggestion

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = none

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = none

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = suggestion

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = suggestion

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = none

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = suggestion

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = suggestion

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = suggestion

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = suggestion

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = suggestion

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = suggestion

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = silent

# CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = suggestion

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = suggestion

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning

# CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = warning

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = none

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = none

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = none

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = none

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = none

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = none

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = none

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = none

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = none

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = none

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = none

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = none

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = none

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = none

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = none

# CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = none

# CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = none

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = none

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = none

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = none

# CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = none

# CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = none

# CA2361: Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = none

# CA2362: Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = none

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = none

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = none

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = none

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = none

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = none

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = none

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = none

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = none

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = none

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = none

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = none

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = none

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = silent

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = silent

# CA3076: Insecure XSLT script processing.
dotnet_diagnostic.CA3076.severity = silent

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = silent

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = silent

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = silent

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = silent

# CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = none

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = silent

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = silent

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = none

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = none

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = silent

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = silent

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = silent

# CA5366: Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = silent

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = none

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = silent

# CA5369: Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = silent

# CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = silent

# CA5371: Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = silent

# CA5372: Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = silent

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = silent

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = silent

# CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = none

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = none

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = none

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = none

# CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = silent

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = none

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = none

# CA5382: Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = none

# CA5383: Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = none

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = silent

# CA5385: Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = silent

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = none

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = none

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = none

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = none

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = none

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = none

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = none

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = none

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = none

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = none

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = none

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = silent

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = none

# CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = none

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = none

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = none

# CA5402: Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = none

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = none

# CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = none

# CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = none

# CA9998: Analyzer package has been deprecated
dotnet_diagnostic.CA9998.severity = warning

# CA9999: Analyzer version mismatch
dotnet_diagnostic.CA9999.severity = warning

# IL3000: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3000.severity = warning

# IL3001: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3001.severity = warning
