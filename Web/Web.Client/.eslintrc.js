/* eslint-disable unicorn/no-abusive-eslint-disable */
/* eslint-disable unicorn/prefer-module */
/* eslint-disable unicorn/prefer-spread */

require('babel-preset-react-app/prod');
require('@rushstack/eslint-patch/modern-module-resolution');

const restrictedGlobals = require('confusing-browser-globals');

module.exports = {
  root: true,
  env: {
    browser: true,
    commonjs: true,
    es2018: true,
    es2019: true,
    es2020: true,
    es2021: true,
    es2022: true,
    es6: true,
    node: true,
  },
  settings: {
    react: {
      pragma: 'React',
      version: 'detect',
    },
    //flowtype: {
    //  onlyFilesWithFlowAnnotation: true,
    //},
    /*
    'import/cache': {
      lifetime: 30, //'Infinity',
    },
    'import/core-modules': [],
    'import/extensions': ['.js', '.jsx', 'ts', 'tsx'],
    'import/external-module-folders': ['node_modules', 'src', '.yarn/cache', '.yarn/unplugged'],
    'import/ignore': ['.coffee$', '.(css|less|scss)$'],
    'import/internal-regex': [], //['^@scope/'],
    'import/parsers': {
      [require.resolve('@babel/eslint-parser')]: ['.js', '.jsx'],
      [require.resolve('@typescript-eslint/parser')]: ['.ts', '.tsx', '.d.ts'],
    },
    'import/resolver': {
      [require.resolve('eslint-import-resolver-node')]: {
        alwaysTryTypes: true,
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
        moduleDirectory: ['node_modules', 'src', '.yarn/cache', '.yarn/unplugged'],
        paths: ['src'],
      },
      [require.resolve('eslint-import-resolver-typescript')]: {
        alwaysTryTypes: true,
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
        moduleDirectory: ['node_modules', 'src', '.yarn/cache', '.yarn/unplugged'],
        paths: ['src'],
      },
    },
    */
  },
  parser: '@babel/eslint-parser',
  parserOptions: {
    requireConfigFile: false,
    sourceType: 'module',
    allowImportExportEverywhere: true,
    babelOptions: {
      presets: [['babel-preset-react-app', false], 'babel-preset-react-app/prod'],
      caller: {
        // ESLint supports top level await when a parser for it is included. We enable the parser by default for Babel.
        supportsTopLevelAwait: true,
      },
    },
    ecmaFeatures: {
      experimentalObjectRestSpread: true,
      globalReturn: false,
      impliedStrict: true,
      jsx: true,
    },
    ecmaVersion: 'latest',
    jsxPragma: null,
    //project: ['./jsconfig.json'],
  },
  extends: [
    'eslint:recommended',
    'plugin:flowtype/recommended',
    'plugin:i18next/recommended',
    //'plugin:import/recommended',
    //'plugin:import/typescript',
    'plugin:json/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:promise/recommended',
    'plugin:react/recommended',
    'plugin:react/jsx-runtime',
    'plugin:react-hooks/recommended',
    'plugin:security/recommended',
    'plugin:unicorn/recommended',
    'prettier',
    'prettier/prettier',
    'plugin:prettier/recommended',
  ],
  plugins: [
    'flowtype',
    //'html',
    'i18next',
    'import',
    'jest',
    'json',
    'json-files',
    'jsx-a11y',
    'promise',
    'react',
    'react-hooks',
    'security',
    //'simple-import-sort',
    'unicorn',
    'prettier',
  ],
  rules: {
    'array-callback-return': 'warn',
    'arrow-body-style': 'off',
    'capitalized-comments': 'off',
    'comma-dangle': [
      'off',
      {
        arrays: 'always',
        objects: 'never',
        imports: 'never',
        exports: 'never',
        functions: 'never',
      },
    ],
    'consistent-return': 'warn',
    'curly': ['warn', 'all'],
    'default-case': ['warn', { commentPattern: '^no default$' }],
    'default-param-last': 'off',
    'dot-location': ['warn', 'property'],
    'eol-last': ['warn', 'always'],
    'eqeqeq': ['warn', 'smart'],
    'flowtype/define-flow-type': 'warn',
    'flowtype/no-types-missing-file-annotation': 'off',
    'flowtype/require-valid-file-annotation': 'warn',
    'flowtype/use-flow-type': 'warn',
    'getter-return': 'warn',
    'i18next/no-literal-string': 'warn',
    //'import': 'off',
    //'import/export': 'warn',
    'import/first': 'warn',
    //'import/named': 'warn',
    //'import/newline-after-import': ['warn', { count: 1 }],
    'import/no-amd': 'warn',
    'import/no-anonymous-default-export': 'warn',
    //'import/no-cycle': 'off',
    //'import/no-duplicates': 'warn',
    //'import/no-extraneous-dependencies': 'off',
    //'import/no-useless-path-segments': [
    //  'warn',
    //  {
    //    noUselessIndex: true,
    //  },
    //],
    'import/no-webpack-loader-syntax': 'warn',
    //'import/order': [
    //  'off',
    //  {
    //    'groups': ['builtin', 'external', 'internal', 'unknown', 'parent', 'sibling', 'index', 'object', 'type'],
    //    'pathGroups': [
    //      {
    //        pattern: 'react',
    //        patternOptions: { nocomment: true },
    //        group: 'builtin',
    //        position: 'before',
    //      },
    //    ],
    //    'pathGroupsExcludedImportTypes': ['react'],
    //    'newlines-between': 'always',
    //    'alphabetize': { order: 'asc', caseInsensitive: true },
    //    'warnOnUnassignedImports': true,
    //  },
    //],
    //'import/prefer-default-export': 'off',
    'indent': ['off', 2],
    'json/*': ['warn', { allowComments: false }],
    'json/json': ['warn', { allowComments: false }],
    'jsx-a11y/alt-text': [
      'warn',
      {
        elements: ['img'],
        img: ['Image'],
      },
    ],
    'jsx-a11y/anchor-has-content': 'warn',
    'jsx-a11y/anchor-is-valid': [
      'warn',
      {
        aspects: ['noHref', 'invalidHref'],
      },
    ],
    'jsx-a11y/aria-activedescendant-has-tabindex': 'warn',
    'jsx-a11y/aria-props': 'warn',
    'jsx-a11y/aria-proptypes': 'warn',
    'jsx-a11y/aria-role': ['warn', { ignoreNonDOM: true }],
    'jsx-a11y/aria-unsupported-elements': 'warn',
    'jsx-a11y/heading-has-content': 'warn',
    'jsx-a11y/iframe-has-title': 'warn',
    'jsx-a11y/img-redundant-alt': 'warn',
    'jsx-a11y/no-access-key': 'warn',
    'jsx-a11y/no-distracting-elements': 'warn',
    'jsx-a11y/no-redundant-roles': 'warn',
    'jsx-a11y/role-has-required-aria-props': 'warn',
    'jsx-a11y/role-supports-aria-props': 'warn',
    'jsx-a11y/scope': 'warn',
    'linebreak-style': ['warn', 'unix'],
    'lines-around-comment': [
      'off',
      {
        beforeBlockComment: true,
        afterBlockComment: true,
        beforeLineComment: true,
        afterLineComment: true,
        allowBlockStart: true,
        allowBlockEnd: true,
        allowClassStart: true,
        allowClassEnd: true,
        allowObjectStart: true,
        allowObjectEnd: true,
        allowArrayStart: true,
        allowArrayEnd: true,
      },
    ],
    'max-len': [
      'off',
      {
        code: 120,
        tabWidth: 2,
        comments: 120,
        ignorePattern: '^\\s*var\\s.+=\\s*require\\s*\\(.*$',
        ignoreComments: true,
        ignoreTrailingComments: true,
        ignoreUrls: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
      },
    ],
    'new-parens': 'warn',
    'no-alert': 'off',
    'no-array-constructor': 'warn',
    'no-caller': 'warn',
    'no-cond-assign': ['warn', 'except-parens'],
    'no-confusing-arrow': ['off', { allowParens: true, onlyOneSimpleParam: false }],
    'no-console': 'off',
    'no-const-assign': 'warn',
    'no-control-regex': 'warn',
    'no-delete-var': 'warn',
    'no-dupe-args': 'warn',
    'no-dupe-class-members': 'warn',
    'no-dupe-keys': 'warn',
    'no-duplicate-case': 'warn',
    'no-empty': 'warn',
    'no-empty-character-class': 'warn',
    'no-empty-pattern': 'warn',
    'no-eval': 'warn',
    'no-ex-assign': 'warn',
    'no-extend-native': 'warn',
    'no-extra-bind': 'warn',
    'no-extra-boolean-cast': 'warn',
    'no-extra-label': 'warn',
    'no-fallthrough': 'warn',
    'no-func-assign': 'warn',
    'no-global-assign': 'warn',
    'no-implied-eval': 'warn',
    'no-invalid-regexp': 'warn',
    'no-iterator': 'warn',
    'no-label-var': 'warn',
    'no-labels': ['warn', { allowLoop: true, allowSwitch: false }],
    'no-lone-blocks': 'warn',
    'no-loop-func': 'warn',
    'no-mixed-operators': [
      'warn',
      {
        groups: [
          ['&', '|', '^', '~', '<<', '>>', '>>>'],
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
        allowSamePrecedence: false,
      },
    ],
    'no-multi-str': 'warn',
    'no-new-func': 'warn',
    'no-new-object': 'warn',
    'no-new-symbol': 'warn',
    'no-new-wrappers': 'warn',
    'no-obj-calls': 'warn',
    'no-octal': 'warn',
    'no-octal-escape': 'warn',
    'no-param-reassign': 'off',
    'no-redeclare': 'warn',
    'no-regex-spaces': 'warn',
    'no-restricted-globals': ['warn'].concat(restrictedGlobals),
    'no-restricted-properties': [
      'warn',
      {
        object: 'require',
        property: 'ensure',
        message:
          'Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting',
      },
      {
        object: 'System',
        property: 'import',
        message:
          'Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting',
      },
    ],
    'no-restricted-syntax': ['warn', 'WithStatement', 'SequenceExpression'],
    'no-return-assign': 'off',
    'no-script-url': 'warn',
    'no-self-assign': 'warn',
    'no-self-compare': 'warn',
    'no-sequences': ['warn', { allowInParentheses: false }],
    'no-shadow': 'off',
    'no-shadow-restricted-names': 'warn',
    'no-sparse-arrays': 'warn',
    'no-tabs': ['warn', { allowIndentationTabs: false }],
    'no-template-curly-in-string': 'warn',
    'no-this-before-super': 'warn',
    'no-throw-literal': 'warn',
    'no-undef': 'warn',
    'no-underscore-dangle': 'off',
    'no-unexpected-multiline': 'off',
    'no-unreachable': 'warn',
    'no-unsafe-negation': 'warn',
    'no-unused-expressions': [
      'off',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
      },
    ],
    'no-unused-labels': 'warn',
    'no-unused-vars': [
      'off',
      {
        args: 'none',
        ignoreRestSiblings: true,
        vars: 'local',
      },
    ],
    'no-use-before-define': [
      'warn',
      {
        functions: false,
        classes: false,
        variables: false,
      },
    ],
    'no-useless-computed-key': 'warn',
    'no-useless-concat': 'warn',
    'no-useless-constructor': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-rename': [
      'warn',
      {
        ignoreDestructuring: false,
        ignoreImport: false,
        ignoreExport: false,
      },
    ],
    'no-var': 'warn',
    'no-whitespace-before-property': 'warn',
    'no-with': 'warn',
    'padded-blocks': [
      'off',
      {
        blocks: 'always',
        classes: 'always',
        switches: 'always',
      },
    ],
    'padding-line-between-statements': [
      'warn',
      { blankLine: 'always', prev: '*', next: ['block', 'block-like'] },
      { blankLine: 'always', prev: ['block', 'block-like'], next: '*' },
      { blankLine: 'always', prev: '*', next: 'export' },
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'any', prev: 'import', next: 'import' },
      { blankLine: 'any', prev: 'export', next: 'export' },
    ],
    'prefer-arrow-callback': 'off',
    'prefer-const': 'warn',
    'prefer-destructuring': 'off',
    'prettier/prettier': 'warn',
    'promise/always-return': 'off',
    'promise/catch-or-return': 'warn',
    'promise/no-nesting': 'warn',
    'quotes': ['warn', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
    'react/button-has-type': 'warn',
    'react/destructuring-assignment': 'off',
    'react/display-name': 'warn',
    'react/forbid-foreign-prop-types': ['warn', { allowInPropTypes: true }],
    'react/forbid-prop-types': 'off',
    'react/jsx-curly-spacing': ['warn', 'never'],
    'react/jsx-filename-extension': [
      'warn',
      {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    ],
    'react/jsx-key': 'warn',
    'react/jsx-props-no-spreading': [
      'warn',
      {
        custom: 'ignore',
      },
    ],
    'react/jsx-max-props-per-line': [
      'off',
      {
        maximum: 1,
      },
    ],
    'react/jsx-no-comment-textnodes': 'warn',
    'react/jsx-no-duplicate-props': 'warn',
    'react/jsx-no-target-blank': 'warn',
    'react/jsx-no-undef': 'warn',
    'react/jsx-pascal-case': [
      'warn',
      {
        allowAllCaps: true,
        ignore: [],
      },
    ],
    'react/jsx-uses-react': 'off',
    'react/jsx-uses-vars': 'warn',
    'react/no-array-index-key': 'warn',
    'react/no-children-prop': 'off',
    'react/no-danger-with-children': 'warn',
    'react/no-direct-mutation-state': 'warn',
    'react/no-is-mounted': 'warn',
    'react/no-typos': 'warn',
    'react/no-unescaped-entities': 'off',
    'react/no-unused-prop-types': 'warn',
    'react/prop-types': 'warn',
    'react/react-in-jsx-scope': 'off',
    'react/require-default-props': 'off',
    'react/require-render-return': 'warn',
    'react/style-prop-object': 'warn',
    'react-hooks/exhaustive-deps': 'warn',
    'react-hooks/rules-of-hooks': 'warn',
    'require-yield': 'warn',
    'rest-spread-spacing': ['warn', 'never'],
    'security/detect-non-literal-fs-filename': 'warn',
    'security/detect-object-injection': 'off',
    'security/detect-unsafe-regex': 'off',
    'semi': ['warn', 'always', { omitLastInOneLineBlock: true }],
    //'simple-import-sort/imports': 'off',
    //'simple-import-sort/exports': 'off',
    'sort-imports': [
      'off',
      {
        ignoreCase: false,
        ignoreDeclarationSort: false,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
        allowSeparatedGroups: false,
      },
    ],
    'strict': ['warn', 'never'],
    'unicode-bom': ['warn', 'never'],
    'unicorn/better-regex': 'warn',
    'unicorn/catch-error-name': 'warn',
    'unicorn/error-message': 'warn',
    'unicorn/explicit-length-check': 'warn',
    'unicorn/filename-case': [
      'warn',
      {
        cases: {
          camelCase: true,
          kebabCase: true,
          pascalCase: true,
        },
      },
    ],
    'unicorn/new-for-builtins': 'warn',
    'unicorn/no-abusive-eslint-disable': 'warn',
    'unicorn/no-array-for-each': 'warn',
    'unicorn/no-array-reduce': 'warn',
    'unicorn/no-null': 'off',
    'unicorn/no-process-exit': 'warn',
    'unicorn/no-useless-fallback-in-spread': 'warn',
    'unicorn/no-useless-undefined': 'warn',
    'unicorn/numeric-separators-style': 'warn',
    'unicorn/prefer-add-event-listener': 'warn',
    'unicorn/prefer-export-from': 'warn',
    'unicorn/prefer-includes': 'warn',
    'unicorn/prefer-number-properties': 'warn',
    'unicorn/prefer-query-selector': 'warn',
    'unicorn/prefer-logical-operator-over-ternary': 'off',
    'unicorn/prefer-module': 'warn',
    'unicorn/prefer-node-protocol': 'warn',
    'unicorn/prefer-optional-catch-binding': 'warn',
    'unicorn/prefer-regexp-test': 'warn',
    'unicorn/prefer-spread': 'warn',
    'unicorn/prefer-switch': 'warn',
    'unicorn/prefer-ternary': 'warn',
    'unicorn/prefer-top-level-await': 'off',
    'unicorn/prevent-abbreviations': 'off',
    'unicorn/throw-new-error': 'warn',
    'use-isnan': 'warn',
    'valid-typeof': 'warn',
  },
  overrides: [
    {
      files: ['**/*.ts?(x)'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        requireConfigFile: false,
        sourceType: 'module',
        allowImportExportEverywhere: true,
        ecmaFeatures: {
          experimentalObjectRestSpread: true,
          globalReturn: false,
          impliedStrict: true,
          jsx: true,
        },
        ecmaVersion: 'latest',
        jsxPragma: null,
        project: ['./tsconfig.json'],
        warnOnUnsupportedTypeScriptVersion: true,
      },
      extends: [
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'prettier',
        'prettier/prettier',
        'plugin:prettier/recommended',
      ],
      plugins: ['@typescript-eslint'],
      rules: {
        'default-case': ['off', { commentPattern: '^no default$' }],
        'lines-between-class-members': 'off',
        'no-array-constructor': 'off',
        'no-dupe-class-members': 'off',
        'no-octal': 'warn',
        'no-octal-escape': 'warn',
        'no-redeclare': 'off',
        'no-undef': 'off',
        'no-unused-expressions': [
          'off',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        'no-unused-vars': [
          'off',
          {
            args: 'none',
            ignoreRestSiblings: true,
            vars: 'local',
          },
        ],
        'no-use-before-define': 'off',
        'no-useless-constructor': 'off',
        'prefer-const': 'warn',
        'prettier/prettier': 'warn',
        'quotes': ['off', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        'require-await': 'off',
        '@typescript-eslint/consistent-type-assertions': 'warn',
        '@typescript-eslint/explicit-function-return-type': 'warn',
        '@typescript-eslint/explicit-module-boundary-types': 'warn',
        '@typescript-eslint/lines-between-class-members': [
          'warn',
          'always',
          {
            exceptAfterOverload: true,
            exceptAfterSingleLine: true,
          },
        ],
        '@typescript-eslint/naming-convention': 'off',
        '@typescript-eslint/no-array-constructor': 'warn',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-explicit-any': 'warn',
        '@typescript-eslint/no-floating-promises': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-redeclare': 'warn',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unused-expressions': [
          'warn',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        '@typescript-eslint/no-unused-vars': [
          'warn',
          {
            args: 'none',
            ignoreRestSiblings: true,
          },
        ],
        '@typescript-eslint/no-use-before-define': [
          'warn',
          {
            functions: false,
            classes: false,
            variables: false,
            typedefs: false,
          },
        ],
        '@typescript-eslint/no-useless-constructor': 'warn',
        '@typescript-eslint/quotes': ['warn', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        '@typescript-eslint/require-await': 'warn',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/triple-slash-reference': 'off',
        '@typescript-eslint/ban-types': 'warn',
      },
    },
    {
      files: ['**/__tests__/**/*.ts?(x)', '**/?(*.)+(spec|test).ts?(x)', '**/cypress/**/*.ts?(x)'],
      env: {
        'cypress/globals': true,
        'jest': true,
        'jest/globals': true,
      },
      parser: '@typescript-eslint/parser',
      parserOptions: {
        requireConfigFile: false,
        sourceType: 'module',
        allowImportExportEverywhere: true,
        ecmaFeatures: {
          experimentalObjectRestSpread: true,
          globalReturn: false,
          impliedStrict: true,
          jsx: true,
        },
        ecmaVersion: 'latest',
        jsxPragma: null,
        project: ['./tsconfig.json'],
        warnOnUnsupportedTypeScriptVersion: true,
      },
      extends: [
        'plugin:testing-library/react',
        'plugin:cypress/recommended',
        'plugin:chai-friendly/recommended',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'prettier',
        'prettier/prettier',
        'plugin:prettier/recommended',
      ],
      plugins: ['testing-library', 'cypress', 'chai-friendly', '@typescript-eslint'],
      rules: {
        'default-case': ['off', { commentPattern: '^no default$' }],
        'lines-between-class-members': 'off',
        'no-array-constructor': 'off',
        'no-dupe-class-members': 'off',
        'no-octal': 'warn',
        'no-octal-escape': 'warn',
        'no-redeclare': 'off',
        'no-undef': 'off',
        'no-unused-expressions': [
          'off',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        'no-unused-vars': [
          'off',
          {
            args: 'none',
            ignoreRestSiblings: true,
            vars: 'local',
          },
        ],
        'no-use-before-define': 'off',
        'no-useless-constructor': 'off',
        'prefer-const': 'warn',
        'prettier/prettier': 'warn',
        'quotes': ['off', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        'require-await': 'off',
        '@typescript-eslint/consistent-type-assertions': 'warn',
        '@typescript-eslint/explicit-function-return-type': 'warn',
        '@typescript-eslint/explicit-module-boundary-types': 'warn',
        '@typescript-eslint/lines-between-class-members': [
          'warn',
          'always',
          {
            exceptAfterOverload: true,
            exceptAfterSingleLine: true,
          },
        ],
        '@typescript-eslint/naming-convention': 'off',
        '@typescript-eslint/no-array-constructor': 'warn',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-explicit-any': 'warn',
        '@typescript-eslint/no-floating-promises': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-redeclare': 'warn',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unused-expressions': [
          'warn',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        '@typescript-eslint/no-unused-vars': [
          'warn',
          {
            args: 'none',
            ignoreRestSiblings: true,
          },
        ],
        '@typescript-eslint/no-use-before-define': [
          'warn',
          {
            functions: false,
            classes: false,
            variables: false,
            typedefs: false,
          },
        ],
        '@typescript-eslint/no-useless-constructor': 'warn',
        '@typescript-eslint/quotes': ['warn', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        '@typescript-eslint/require-await': 'warn',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/triple-slash-reference': 'off',
        'chai-friendly/no-unused-expressions': 'warn',
        'cypress/no-assigning-return-values': 'warn',
        'cypress/no-unnecessary-waiting': 'warn',
        'cypress/assertion-before-screenshot': 'warn',
        'cypress/no-force': 'warn',
        'cypress/no-async-tests': 'warn',
        'cypress/no-pause': 'warn',
        'jest/no-conditional-expect': 'warn',
        'jest/no-identical-title': 'warn',
        'jest/no-interpolation-in-snapshots': 'warn',
        'jest/no-jasmine-globals': 'warn',
        //'jest/no-jest-import': 'warn',
        'jest/no-mocks-import': 'warn',
        'jest/valid-describe-callback': 'warn',
        'jest/valid-expect': 'warn',
        'jest/valid-expect-in-promise': 'warn',
        'jest/valid-title': 'warn',
        'testing-library/await-async-query': 'warn',
        'testing-library/await-async-utils': 'warn',
        'testing-library/no-await-sync-query': 'warn',
        'testing-library/no-container': 'warn',
        'testing-library/no-debugging-utils': 'warn',
        'testing-library/no-dom-import': ['warn', 'react'],
        'testing-library/no-node-access': 'warn',
        'testing-library/no-promise-in-fire-event': 'warn',
        'testing-library/no-render-in-setup': 'warn',
        'testing-library/no-unnecessary-act': 'warn',
        'testing-library/no-wait-for-empty-callback': 'warn',
        'testing-library/no-wait-for-multiple-assertions': 'warn',
        'testing-library/no-wait-for-side-effects': 'warn',
        'testing-library/no-wait-for-snapshot': 'warn',
        'testing-library/prefer-find-by': 'warn',
        'testing-library/prefer-presence-queries': 'warn',
        'testing-library/prefer-query-by-disappearance': 'warn',
        'testing-library/prefer-screen-queries': 'warn',
        'testing-library/render-result-naming-convention': 'warn',
      },
    },
    {
      files: ['**/*.stories*.ts?(x)'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        requireConfigFile: false,
        sourceType: 'module',
        allowImportExportEverywhere: true,
        ecmaFeatures: {
          experimentalObjectRestSpread: true,
          globalReturn: false,
          impliedStrict: true,
          jsx: true,
        },
        ecmaVersion: 'latest',
        jsxPragma: null,
        project: ['./tsconfig.json'],
        warnOnUnsupportedTypeScriptVersion: true,
      },
      extends: [
        'plugin:storybook/recommended',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'prettier',
        'prettier/prettier',
        'plugin:prettier/recommended',
      ],
      plugins: ['storybook', '@typescript-eslint'],
      rules: {
        'default-case': ['off', { commentPattern: '^no default$' }],
        'lines-between-class-members': 'off',
        'no-array-constructor': 'off',
        'no-dupe-class-members': 'off',
        'no-octal': 'warn',
        'no-octal-escape': 'warn',
        'no-redeclare': 'off',
        'no-undef': 'off',
        'no-unused-expressions': [
          'off',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        'no-unused-vars': [
          'off',
          {
            args: 'none',
            ignoreRestSiblings: true,
            vars: 'local',
          },
        ],
        'no-use-before-define': 'off',
        'no-useless-constructor': 'off',
        'prefer-const': 'warn',
        'prettier/prettier': 'warn',
        'quotes': ['off', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        'require-await': 'off',
        '@typescript-eslint/consistent-type-assertions': 'warn',
        '@typescript-eslint/explicit-function-return-type': 'warn',
        '@typescript-eslint/explicit-module-boundary-types': 'warn',
        '@typescript-eslint/lines-between-class-members': [
          'warn',
          'always',
          {
            exceptAfterOverload: true,
            exceptAfterSingleLine: true,
          },
        ],
        '@typescript-eslint/naming-convention': 'off',
        '@typescript-eslint/no-array-constructor': 'warn',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-explicit-any': 'warn',
        '@typescript-eslint/no-floating-promises': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-redeclare': 'warn',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unused-expressions': [
          'warn',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        '@typescript-eslint/no-unused-vars': [
          'warn',
          {
            args: 'none',
            ignoreRestSiblings: true,
          },
        ],
        '@typescript-eslint/no-use-before-define': [
          'warn',
          {
            functions: false,
            classes: false,
            variables: false,
            typedefs: false,
          },
        ],
        '@typescript-eslint/no-useless-constructor': 'warn',
        '@typescript-eslint/quotes': ['warn', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        '@typescript-eslint/require-await': 'warn',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/triple-slash-reference': 'off',
        'import/no-anonymous-default-export': 'off',
      },
    },
    {
      files: ['**/__tests__/**/*.js?(x)', '**/?(*.)+(spec|test).js?(x)', '**/cypress/**/*.js?(x)'],
      env: {
        'cypress/globals': true,
        'jest': true,
        'jest/globals': true,
      },
      extends: ['plugin:testing-library/react', 'plugin:cypress/recommended', 'plugin:chai-friendly/recommended'],
      plugins: ['testing-library', 'cypress', 'chai-friendly'],
      rules: {
        'chai-friendly/no-unused-expressions': 'warn',
        'cypress/no-assigning-return-values': 'warn',
        'cypress/no-unnecessary-waiting': 'warn',
        'cypress/assertion-before-screenshot': 'warn',
        'cypress/no-force': 'warn',
        'cypress/no-async-tests': 'warn',
        'cypress/no-pause': 'warn',
        'jest/no-conditional-expect': 'warn',
        'jest/no-identical-title': 'warn',
        'jest/no-interpolation-in-snapshots': 'warn',
        'jest/no-jasmine-globals': 'warn',
        //'jest/no-jest-import': 'warn',
        'jest/no-mocks-import': 'warn',
        'jest/valid-describe-callback': 'warn',
        'jest/valid-expect': 'warn',
        'jest/valid-expect-in-promise': 'warn',
        'jest/valid-title': 'warn',
        'testing-library/await-async-query': 'warn',
        'testing-library/await-async-utils': 'warn',
        'testing-library/no-await-sync-query': 'warn',
        'testing-library/no-container': 'warn',
        'testing-library/no-debugging-utils': 'warn',
        'testing-library/no-dom-import': ['warn', 'react'],
        'testing-library/no-node-access': 'warn',
        'testing-library/no-promise-in-fire-event': 'warn',
        'testing-library/no-render-in-setup': 'warn',
        'testing-library/no-unnecessary-act': 'warn',
        'testing-library/no-wait-for-empty-callback': 'warn',
        'testing-library/no-wait-for-multiple-assertions': 'warn',
        'testing-library/no-wait-for-side-effects': 'warn',
        'testing-library/no-wait-for-snapshot': 'warn',
        'testing-library/prefer-find-by': 'warn',
        'testing-library/prefer-presence-queries': 'warn',
        'testing-library/prefer-query-by-disappearance': 'warn',
        'testing-library/prefer-screen-queries': 'warn',
        'testing-library/render-result-naming-convention': 'warn',
      },
    },
    {
      files: ['**/*.stories.*'],
      extends: ['plugin:storybook/recommended'],
      plugins: ['storybook'],
      rules: {
        'import/no-anonymous-default-export': 'off',
      },
    },
    {
      files: ['**/*.md'],
      extends: ['plugin:markdown/recommended'],
      plugins: ['markdown'],
      rules: {
        'prettier/prettier': [
          'warn',
          {
            parser: 'markdown',
          },
        ],
      },
    },
  ],
};
